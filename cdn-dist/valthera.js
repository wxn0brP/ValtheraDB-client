var w=Object.defineProperty;var a=(c,t)=>w(c,"name",{value:t,configurable:!0});var l=class{static{a(this,"CollectionManager")}db;collection;constructor(t,e){this.db=t,this.collection=e}async add(t,e=!0){return await this.db.add(this.collection,t,e)}async find(t={},e={},r={},n={}){return await this.db.find(this.collection,t,e,r,n)}async findOne(t={},e={},r={}){return await this.db.findOne(this.collection,t,e,r)}async update(t,e,r={}){return await this.db.update(this.collection,t,e,r)}async updateOne(t,e,r={}){return await this.db.updateOne(this.collection,t,e,r)}async remove(t,e={}){return await this.db.remove(this.collection,t,e)}async removeOne(t,e={}){return await this.db.removeOne(this.collection,t,e)}async updateOneOrAdd(t,e,{add_arg:r={},context:n={},id_gen:s=!0}){return await this.db.updateOneOrAdd(this.collection,t,e,{add_arg:r,context:n,id_gen:s})}},p=l;function O(c){let t=[];function e(n){return typeof n=="function"?n.toString():n}a(e,"convertFunctionToString");function r(n,s=""){Object.keys(n).forEach(o=>{let i=n[o],u=s?`${s}.${o.replace(/\./g,"[dot]")}`:o;typeof i=="function"?(t.push(u),n[o]=e(i)):Array.isArray(i)?i.forEach((h,f)=>{typeof h=="function"&&(t.push(`${u}[${f}]`),i[f]=e(h))}):typeof i=="object"&&i!==null&&r(i,u)})}return a(r,"traverseAndSerialize"),r(c),{data:c,keys:t}}a(O,"serializeFunctions");var y=O;var m="0.0.1";var d=class{static{a(this,"ValtheraRemote")}remote;version=m;constructor(t){if(typeof t=="string"){let e=new URL(t),r=e.username,n=e.password;if(!r||!n)throw new Error("Invalid remote database");e.username="",e.password="";let s=e.toString().slice(0,-1);this.remote={name:r,url:s,auth:n}}else this.remote=t;this.remote.url.endsWith("/")&&(this.remote.url=this.remote.url.slice(0,-1))}async _request(t,e=[]){let r=y(e),n={db:this.remote.name,params:r.data,keys:r.keys},s=this.remote.url+"/db/"+t,o=await fetch(s,{method:"POST",headers:{"Content-Type":"application/json",Authorization:this.remote.auth},body:JSON.stringify(n)}).then(i=>i.json());if(o.err)throw new Error(o.msg);return o.result}c(t){return new p(this,t)}async getCollections(){return await this._request("getCollections",[])}async ensureCollection(t){return await this._request("ensureCollection",[t])}async issetCollection(t){return await this._request("issetCollection",[t])}async add(t,e,r=!0){return await this._request("add",[t,e,r])}async find(t,e,r={},n={},s={}){return await this._request("find",[t,e,r,n,s])}async findOne(t,e,r={},n={}){return await this._request("findOne",[t,e,r,n])}async update(t,e,r,n={}){return await this._request("update",[t,e,r,n])}async updateOne(t,e,r,n={}){return await this._request("updateOne",[t,e,r,n])}async remove(t,e,r={}){return await this._request("remove",[t,e,r])}async removeOne(t,e,r={}){return await this._request("removeOne",[t,e,r])}async updateOneOrAdd(t,e,r,n){return await this._request("updateOneOrAdd",[t,e,r,n])}async removeCollection(t){return await this._request("removeCollection",[t])}},z=d;export{d as ValtheraRemote,z as default};
//# sourceMappingURL=valthera.js.map
